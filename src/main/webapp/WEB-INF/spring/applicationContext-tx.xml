<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 导入依赖 -->
	<beans:import resource="applicationContext-dao.xml" />

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="leapDataSource"/>
		<property name="packagesToScan">
			<list>
        	 	<value>com.lele.manager.entity</value>
         		<value>com.lele.manager.sys.entity</value>
         		<value>com.lele.wechat.entity</value>
     		</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.connection.autocommit">${hibernate.connection.autocommit}</prop>
				<prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>
				<prop key="hibernate.connection.release_mode">${hibernate.connection.release_mode}</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
			</props>
		</property>
	</bean>
	<!-- end 新增系统权限库 -->

	<!-- 开启注解事务 只对当前配置文件有效 -->
	<tx:annotation-driven transaction-manager="leapTransactionManager" proxy-target-class="true"/>
	
	<!--事务管理器配置-->
	<bean id="leapTransactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- Transactional advice -->
	<tx:advice id="leapTxAdvice" transaction-manager="leapTransactionManager">
		<tx:attributes>
			<tx:method name="get*" propagation="SUPPORTS" rollback-for="Exception" />
			<tx:method name="count*" propagation="SUPPORTS" rollback-for="Exception" />
			<tx:method name="find*" propagation="SUPPORTS" rollback-for="Exception" />
			<tx:method name="query*" propagation="SUPPORTS" rollback-for="Exception" />
			<tx:method name="create*" propagation="SUPPORTS" rollback-for="Exception" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="remove*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="*" propagation="NOT_SUPPORTED" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!--
	<aop:config>
		<aop:pointcut id="serviceOperation"
			expression="execution(* com.lenovo.ldrmp..*.service.*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
	</aop:config>
 	-->
	<!-- bean id="leapServiceExceptionAdvice" class="com.lele.manager.core.handler.ServiceExceptionAdvice"/ -->

	<!-- aop config--> 
	<aop:config>
		<aop:pointcut id="leapServiceOperation" expression="within(com.lele.manager.service.*)"/> <!-- execution(* com.lele.manager..*.service.*.*(..))" / -->
		<aop:advisor advice-ref="leapTxAdvice" pointcut-ref="leapServiceOperation" />
		<!-- aop:advisor advice-ref="leapServiceExceptionAdvice" pointcut-ref="leapServiceOperation" / -->
	</aop:config>
</beans:beans>
